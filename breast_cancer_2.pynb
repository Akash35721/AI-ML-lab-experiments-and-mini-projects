{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"AmmptZKJb4WS"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","from sklearn.datasets import load_breast_cancer\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from tensorflow import keras\n","from tensorflow.keras import layers, models"]},{"cell_type":"code","source":["data = load_breast_cancer()\n","X, y = data.data, data.target"],"metadata":{"id":"8y5gbTOwRVj1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)"],"metadata":{"id":"Fnpr2jnXRY2a"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["scaler = StandardScaler()\n","X_train = scaler.fit_transform(X_train)\n","X_val = scaler.transform(X_val)"],"metadata":{"id":"ArJxkGLYRbVn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model = models.Sequential([\n","    layers.Dense(32, activation='relu', input_shape=(X_train.shape[1],)),\n","    layers.Dropout(0.5),\n","    layers.Dense(16, activation='relu'),\n","    layers.Dropout(0.5),\n","    layers.Dense(1, activation='sigmoid')\n","])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z0r5OTQxRdAy","executionInfo":{"status":"ok","timestamp":1742133922537,"user_tz":-330,"elapsed":3304,"user":{"displayName":"bhavesh","userId":"11390549973641075714"}},"outputId":"c298fa06-c37e-4c67-e212-1ed155406597"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"]}]},{"cell_type":"code","source":["model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])"],"metadata":{"id":"O4QBrK2MRf15"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history = model.fit(\n","    X_train, y_train,\n","    validation_data=(X_val, y_val),\n","    epochs=20,\n","    batch_size=32\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MNb6-kexRi7E","executionInfo":{"status":"ok","timestamp":1742133955421,"user_tz":-330,"elapsed":15494,"user":{"displayName":"bhavesh","userId":"11390549973641075714"}},"outputId":"b35ccaae-326a-48b5-e6bc-3d8f69e96091"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 267ms/step - accuracy: 0.5577 - loss: 0.8033 - val_accuracy: 0.9211 - val_loss: 0.4788\n","Epoch 2/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 6ms/step - accuracy: 0.7106 - loss: 0.5663 - val_accuracy: 0.9474 - val_loss: 0.3741\n","Epoch 3/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.7275 - loss: 0.6074 - val_accuracy: 0.9561 - val_loss: 0.3034\n","Epoch 4/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - accuracy: 0.7842 - loss: 0.4301 - val_accuracy: 0.9561 - val_loss: 0.2540\n","Epoch 5/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.8397 - loss: 0.3807 - val_accuracy: 0.9649 - val_loss: 0.2111\n","Epoch 6/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.8510 - loss: 0.3569 - val_accuracy: 0.9649 - val_loss: 0.1785\n","Epoch 7/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - accuracy: 0.8694 - loss: 0.3206 - val_accuracy: 0.9737 - val_loss: 0.1542\n","Epoch 8/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.8620 - loss: 0.2814 - val_accuracy: 0.9737 - val_loss: 0.1352\n","Epoch 9/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9128 - loss: 0.2758 - val_accuracy: 0.9825 - val_loss: 0.1218\n","Epoch 10/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.8896 - loss: 0.2639 - val_accuracy: 0.9825 - val_loss: 0.1104\n","Epoch 11/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9215 - loss: 0.2382 - val_accuracy: 0.9825 - val_loss: 0.1014\n","Epoch 12/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - accuracy: 0.9248 - loss: 0.2186 - val_accuracy: 0.9825 - val_loss: 0.0924\n","Epoch 13/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9240 - loss: 0.2368 - val_accuracy: 0.9825 - val_loss: 0.0863\n","Epoch 14/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9193 - loss: 0.2008 - val_accuracy: 0.9825 - val_loss: 0.0819\n","Epoch 15/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - accuracy: 0.9465 - loss: 0.1679 - val_accuracy: 0.9825 - val_loss: 0.0771\n","Epoch 16/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9483 - loss: 0.1545 - val_accuracy: 0.9825 - val_loss: 0.0725\n","Epoch 17/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9577 - loss: 0.1714 - val_accuracy: 0.9825 - val_loss: 0.0691\n","Epoch 18/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - accuracy: 0.9346 - loss: 0.1759 - val_accuracy: 0.9825 - val_loss: 0.0669\n","Epoch 19/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - accuracy: 0.9585 - loss: 0.1299 - val_accuracy: 0.9825 - val_loss: 0.0642\n","Epoch 20/20\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9452 - loss: 0.1747 - val_accuracy: 0.9825 - val_loss: 0.0629\n"]}]},{"cell_type":"code","source":["loss, accuracy = model.evaluate(X_val, y_val)\n","print(f\"Validation Accuracy: {accuracy:.2f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WJCGS5akRk5R","executionInfo":{"status":"ok","timestamp":1742133970674,"user_tz":-330,"elapsed":139,"user":{"displayName":"bhavesh","userId":"11390549973641075714"}},"outputId":"111359a8-0730-4565-e841-61e2c741d7e3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 12ms/step - accuracy: 0.9701 - loss: 0.0757\n","Validation Accuracy: 0.98\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"q_e_DYYeRsXW"},"execution_count":null,"outputs":[]}]}